import pickle
import matplotlib.pyplot as plt
import numpy as np
import matplotlib.ticker as ticker
import matplotlib.patches as mpatches

pickle_in=open("boxes_first_branch_silhouette","rb")
branch1=pickle.load(pickle_in)
pickle_in.close()

pickle_in=open("boxes_second_branch","rb")
branch2=pickle.load(pickle_in)
pickle_in.close()



fig, ax = plt.subplots()
plt.grid(True)

ax.set_xlim(-10,20)
ax.set_ylim(-20,20)
#plt.xticks(np.arange(-6,14, 2.0))
#plt.yticks(np.arange(-13,13,2))
ax.set_xlabel('x1')
ax.set_ylabel('x2')


green_patch = mpatches.Patch(color='green', label='Branch 1 (Silhouette)')
yellow_patch = mpatches.Patch(color='yellow', label='projection of a regular solution of Ball(P)')
blue_patch = mpatches.Patch(color='blue', label='Branch 2')
red_patch = mpatches.Patch(color='red', label='unknown')
#plt.legend(handles=[green_patch,blue_patch,yellow_patch,red_patch])
print(branch1[0][len(branch1[0])-1])
input()
for box in branch1[0]:
     rectangle= plt.Rectangle((box[0][0],box[1][0]) , \
    	box[0][1]-box[0][0],box[1][1]-box[1][0], fc='g',label='branch 1')
     plt.gca().add_patch(rectangle)
    
for box in branch2[0]:
     rectangle1= plt.Rectangle((box[0][0],box[1][0]) , \
    	box[0][1]-box[0][0],box[1][1]-box[1][0], fc='b')
     plt.gca().add_patch(rectangle1) 
    

for box in branch2[1]:
     rectangle= plt.Rectangle((box[0][0],box[1][0]) , \
    	box[0][1]-box[0][0],box[1][1]-box[1][0], fc='r')
     plt.gca().add_patch(rectangle)  

for box in branch1[1]:
     rectangle= plt.Rectangle((box[0][0],box[1][0]) , \
    	box[0][1]-box[0][0],box[1][1]-box[1][0], fc='r')
     plt.gca().add_patch(rectangle)            

nodes=[ [[3.448583724858973, 3.448583724858986],[-8.217219599267885e-15, 7.894827466007964e-15] ,\
 [-8.557386145235663e-16, 1.082647191893092e-15] ,[-1.829274273919446e-15, 2.181352045292952e-15] ,\
  [0.268547393470069, 0.2685473934700701] , [0.9632664727168859, 0.9632664727168865] ,\
   [2.181931069921551, 2.181931069921564]],\

  [ [1.737390244809179, 1.737390244809203] , [-3.552180645818092, -3.552180645818075] ,\
   [-1.115902433489008, -1.115902433489003] ,[0.4548938933058896, 0.4548938933058926] ,\
    [-0.2676001079315821, -0.2676001079315807] , [0.9635300629637901, 0.9635300629637908] ,\
     [3.900572570031587, 3.900572570031609] ] ,\


   [[1.73739024480918, 1.737390244809202], [3.552180645818076, 3.552180645818092],\
   [1.115902433489003, 1.115902433489008] , [-0.4548938933058927, -0.4548938933058897],\
    [-0.2676001079315821, -0.2676001079315808] , [0.9635300629637901, 0.9635300629637908] ,\
     [3.900572570031587, 3.900572570031609]] ,  \

[  [7.721984692850796, 7.721984692850812] , [-3.141466956540394, -3.141466956540377],\
 [-0.3863728420937239, -0.3863728420937216] , [1.184423484701171, 1.184423484701176] ,\
  [0.7045456232724641, 0.7045456232724681] , [0.7096586959430635, 0.7096586959430675] ,\
   [0.7763657839373674, 0.7763657839373758]\
     ],\
[ [0.9207659841569152, 0.9207659841569368] , [6.176745907224891, 6.176745907224905] ,\
 [1.422816280530599, 1.422816280530603] , [1.604135836056196, 1.604135836056202] ,\
  [0.9999999999999997, 1.000000000000001] , [-0.004, 0.005] , [0.4558025867659057, 0.4558025867659073]  ] ,\
[ [0.9207659841569152, 0.9207659841569385] , [-6.176745907224905, -6.176745907224891] ,\
 [-1.422816280530603, -1.422816280530599] , [-1.604135836056202, -1.604135836056195] ,\
  [0.9999999999999997, 1.000000000000001], [-0.006, 0.002] , [0.4558025867659056, 0.4558025867659072]   ],\


  [[5.768554404192578, 5.768554404192599], [2.392442284752187, 2.392442284752197] ,\
   [0.3931471619879833, 0.3931471619879855] , [-1.604135836056202, -1.604135836056196] ,\
    [-1.000000000000001, -0.9999999999999997] , [-0.001, 0.001], [0.4558025867659057, 0.4558025867659071]  ] ,\

    [[5.768554404192578, 5.7685544041926] , [-2.392442284752197, -2.392442284752187] ,\
 [-0.3931471619879855, -0.3931471619879831] , [1.604135836056195, 1.604135836056202] ,\
  [-1.000000000000001, -0.9999999999999997] ,[-0.001, 0.001] , [0.4558025867659055, 0.4558025867659071] ],\

[  [7.721984692850793, 7.721984692850813] , [3.141466956540376, 3.141466956540395],\
 [0.3863728420937215, 0.3863728420937243] , [-1.184423484701177, -1.184423484701171],\
  [0.7045456232724639, 0.7045456232724687] , [0.709658695943063, 0.7096586959430677] , \
  [0.7763657839373664, 0.7763657839373763]  ], \

[[12.41439833095755, 12.41439833095757] , [-0.002, 0.002] , [-0.001, 0.002],\
 [-0.002, 0.002] , [0.09406633936052848, 0.0940663393605299] , \
 [0.9955659314175577, 0.9955659314175583] , [6.302749373841498, 6.302749373841543]],\

 [[-3.082612383353999, -3.082612383353989] , [-3.475643802436383e-14, 3.74946058538963e-14] , [-8.076723641275545e-15, 7.424724442578594e-15] , [-3.958318177563295e-15, 3.648646532209156e-15] , [0.7438979017766172, 0.7438979017766182] , [-0.6682932827227476, -0.6682932827227466] , [15.82280363978834, 15.82280363978839]]

]

for box in nodes:
     rectangle= plt.Rectangle((box[0][0]-0.25,box[1][0]-0.25) , \
    	(box[0][1]-box[0][0]+0.5),(box[1][1]-box[1][0]+0.5), fc='y',fill="False")
     plt.gca().add_patch(rectangle)  
"""for box in uncer_nodes:
     rectangle= plt.Rectangle((box[0][0]-0.25,box[1][0]-0.25) , \
    	(box[0][1]-box[0][0]+0.5),(box[1][1]-box[1][0]+0.5), fc='r',fill="False")
     plt.gca().add_patch(rectangle) """      
plt.show()     
